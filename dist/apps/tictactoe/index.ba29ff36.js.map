{"mappings":"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","sources":["apps/tictactoe/main.js"],"sourcesContent":["/*\r\nAuthor: FarasK\r\nDate: 11/15/2020\r\nPurpose: HTML, CSS and js tic tac toe with a stupid ai\r\n*/\r\n\r\n//setup\r\nlet startBtn = document.getElementById('startBtn');\r\nlet restartBtn = document.getElementById('RestartBtn');\r\nlet scoreboardWinner = document.getElementById('winner');// the DOM element of the winner in ther scoreboard\r\nlet scoreboardTimer = document.getElementById('timer');// holdes the timer element\r\nlet showTurn = document.getElementById('turn');\r\nlet radioBtns = document.getElementsByName('gameMode'); // list of radio buttons\r\nconst RNG = ()=>{\r\n  let rng = Math.random();\r\n  if (rng >= 0.5) {\r\n    return 'X';\r\n  }else{\r\n    return 'O';\r\n  }\r\n}\r\nlet turn = null;\r\nlet winner = null;\r\nlet gameIsRunning = false;\r\nlet countOfPlays = 0;\r\nlet cells = document.querySelectorAll('.cell');\r\nlet emptyCell = document.getElementsByClassName('cell')[0].innerHTML // for later comparison\r\nlet theTimer;\r\nlet playMode;\r\nlet gameRunning = false;\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n//When start button is clicked\r\nstartBtn.addEventListener('click', ()=>{\r\n\r\n  if(startBtn.innerHTML !== 'start'){\r\n    location.reload();\r\n  }\r\n    turn = RNG();\r\n    showTurn.innerHTML = 'it is ' + turn + \"'s turn\";\r\n    startTimer();\r\n    //PvP stands for Player v Player\r\n    //PvC stands for vs. Computer\r\n    playMode = (radioBtns[0].checked == true)? 'pvp' : 'pvc';\r\n    clearBoard(cells);\r\n    startBtn.innerHTML = 'Restart';\r\n    game(playMode);\r\n});\r\n\r\n\r\n\r\nfunction startTimer(){\r\n    if(!theTimer){\r\n      let seconds = 1;\r\n      theTimer = setInterval(()=>{\r\n        scoreboardTimer.innerHTML = seconds + 's';\r\n        seconds++;\r\n      }, 1000)\r\n    }else{// when another timer is started and other one is not stopped stop it then start new one;\r\n      stopTimer(theTimer);\r\n      theTimer = null;\r\n      startTimer(theTimer);\r\n    }\r\n}\r\nfunction stopTimer(timer){\r\n  clearInterval(timer);\r\n}\r\n\r\n\r\nfunction drawPlay(e, whosTurn){\r\n  let clickedCell = e.target.childNodes[1]; // the h1 element is at index 1 in the node list, so now we can change the value\r\n  notFreeCell = (clickedCell == undefined || clickedCell.innerHTML !== '')? true : false;\r\n  if(notFreeCell || e.target.className === \"the-play\" ){\r\n    return;\r\n  }else{\r\n    if(!checkWinner(document.querySelectorAll('.cell'))){\r\n      clickedCell.innerHTML = whosTurn;\r\n      countOfPlays++;\r\n      turn = (turn === 'X')? 'O':'X';\r\n    if (countOfPlays >= 9) {\r\n        stopTimer(theTimer);\r\n        scoreboardWinner.innerHTML = 'Catâ€™s Game (tie)';\r\n        startBtn.innerHTML = 'Play again?';\r\n      }\r\n  }\r\n}\r\ncheckWinner(cells);// check winner after every play;\r\n}\r\nfunction checkWinner(gameBoard){\r\n\r\n  // check horizontally\r\n if((gameBoard[0].innerHTML === gameBoard[1].innerHTML && gameBoard[1].innerHTML === gameBoard[2].innerHTML && gameBoard[2].innerHTML !== emptyCell)\r\n  || (gameBoard[3].innerHTML === gameBoard[4].innerHTML && gameBoard[4].innerHTML === gameBoard[5].innerHTML && gameBoard[5].innerHTML !== emptyCell)\r\n  || (gameBoard[6].innerHTML === gameBoard[7].innerHTML && gameBoard[7].innerHTML === gameBoard[8].innerHTML && gameBoard[8].innerHTML !== emptyCell)){\r\n\r\n      winner = (turn === 'X')? 'O':'X';\r\n      scoreboardWinner.innerHTML = 'The Winner is ' + winner;\r\n      startBtn.innerHTML = 'Play again?';\r\n      stopTimer(theTimer);\r\n  return true;\r\n}\r\n// check vertically\r\nelse if ((gameBoard[0].innerHTML === gameBoard[3].innerHTML && gameBoard[3].innerHTML === gameBoard[6].innerHTML && gameBoard[6].innerHTML !== emptyCell)\r\n      || (gameBoard[1].innerHTML === gameBoard[4].innerHTML && gameBoard[4].innerHTML === gameBoard[7].innerHTML && gameBoard[7].innerHTML !== emptyCell)\r\n      || (gameBoard[2].innerHTML === gameBoard[5].innerHTML && gameBoard[5].innerHTML === gameBoard[8].innerHTML && gameBoard[8].innerHTML !== emptyCell)) {\r\n\r\n        winner = (turn === 'X')? 'O':'X';\r\n        scoreboardWinner.innerHTML = 'The Winner is ' + winner;\r\n        startBtn.innerHTML = 'Play again?';\r\n        //timer(theTimer, 'stop');\r\n        stopTimer(theTimer);\r\n        return true;\r\n}\r\n// check diagnolly\r\nelse if ((gameBoard[0].innerHTML === gameBoard[4].innerHTML && gameBoard[4].innerHTML === gameBoard[8].innerHTML && gameBoard[8].innerHTML !== emptyCell)\r\n      || (gameBoard[2].innerHTML === gameBoard[4].innerHTML && gameBoard[4].innerHTML === gameBoard[6].innerHTML && gameBoard[6].innerHTML !== emptyCell)) {\r\n\r\n        winner = (turn === 'X')? 'O':'X';\r\n        scoreboardWinner.innerHTML = 'The Winner is ' + winner;\r\n        startBtn.innerHTML = 'Play again?';\r\n        stopTimer(theTimer);\r\n    return true;\r\n}else {\r\n  return false;\r\n}\r\n}\r\nfunction clearBoard(gameBoard){\r\n  scoreboardWinner.innerHTML = '<span style=\"color:red;\">No Winner Yet</span>';\r\n  gameBoard.forEach((item) => {\r\n    item.innerHTML = emptyCell;\r\n  });\r\n  winner= null;\r\n  countOfPlays = 0;\r\n}\r\n\r\nfunction lookForEmptyCell(gameBoard){\r\n  let cell = null;\r\n\r\n  while(true){\r\n    rng = Math.floor(Math.random() * 9);\r\n    if (gameBoard[rng].innerHTML === emptyCell) {\r\n      cell = gameBoard[rng];\r\n      break;\r\n    }\r\n  }\r\n  return cell;\r\n}\r\nfunction drawComputer(cell){\r\n  checkWinner(cells);\r\n  if(turn === 'O' && countOfPlays <= 9){\r\n    cell.childNodes[1].innerHTML = 'O';\r\n    countOfPlays++;\r\n    turn = (turn === 'X')? 'O':'X';\r\n  }else{\r\n    return;\r\n  }\r\n\r\n}\r\nfunction game(mode){\r\n  //game setup\r\n  mode = playMode;\r\n  if(mode === 'pvp'){\r\n    cells.forEach((item) => {\r\n      item.addEventListener('click', (e)=>{\r\n       drawPlay(e, turn);\r\n     });\r\n\r\n   });\r\n }else if(mode === 'pvc'){\r\n   if(turn === 'O'){\r\n     drawComputer(lookForEmptyCell(cells));\r\n     cells.forEach((item) => {\r\n       item.addEventListener('click', (e)=>{\r\n        drawPlay(e, turn);\r\n      });\r\n    });\r\n  }else if(turn === 'X'){\r\n     cells.forEach((item) => {\r\n       item.addEventListener('click', (e)=>{\r\n        drawPlay(e, 'X');\r\n        if (!checkWinner(cells) && countOfPlays <=8) {\r\n          drawComputer(lookForEmptyCell(cells));\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n   }\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.ba29ff36.js.map","sourceRoot":"/__parcel_source_root/"}